{"version":3,"sources":["Hooks/useFetchJobs.js","Components/Job.jsx","Components/JobsPagination.jsx","Components/SearchForm.jsx","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","loading","jobs","payload","error","eror","hasNextPage","BASE_URL","Job","job","useState","open","setOpen","Card","Body","className","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","display","whiteSpace","source","how_to_apply","height","src","company_logo","alt","Text","Button","onClick","s","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amt","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","useFetchJobs","Container","target","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.948e96d1.chunk.js","sourcesContent":["\nimport { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPATE_HAS_NEXT_PAGE: 'hasNextPage'\n}\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return { ...state, loading: true, jobs: [] };\n        case ACTIONS.GET_DATA:\n            return { ...state, loading: false, jobs: action.payload.jobs };\n        case ACTIONS.ERROR:\n            return { ...state, loading: false, error: action.payload.eror, jobs: [] };\n        case ACTIONS.UPATE_HAS_NEXT_PAGE:\n            return { ...state, hasNextPage: action.payload.hasNextPage };\n        default:\n            return state;\n    }\n}\nconst BASE_URL = 'https://jobs.github.com/positions.json';\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\n\n    useEffect(() => {\n        const cancelToken1 = axios.CancelToken.source();\n        dispatch({ type: ACTIONS.MAKE_REQUEST });\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken1.token,\n            params: { markdown: true, page: page, ...params },\n\n        }).then(res => {\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\n        }).catch(e => {\n            if (axios.isCancel(e))\n                return;\n            dispatch({ type: ACTIONS.ERROR, payload: { jobs: e } });\n        })\n\n        const cancelToken2 = axios.CancelToken.source();\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken2.token,\n            params: { markdown: true, page: page + 1, ...params },\n\n        }).then(res => {\n            dispatch({ type: ACTIONS.UPATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length > 0 } });\n        }).catch(e => {\n            if (axios.isCancel(e))\n                return;\n            dispatch({ type: ACTIONS.ERROR, payload: { jobs: e } });\n        })\n\n\n\n        return () => {\n            cancelToken1.cancel()\n            cancelToken2.cancel()\n        }\n    }, [params, page])\n    return {\n        ...state\n    }\n}","import React, { useState } from 'react'\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Job({ job }) {\n    const [open, setOpen] = useState(false)\n    return (\n        <Card>\n            <Card.Body>\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <Card.Title>\n                            {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\n                        </Card.Title>\n                        <Card.Subtitle className=\"text-muted mb-2\">\n                            {new Date(job.created_at).toLocaleDateString()}\n                        </Card.Subtitle>\n                        <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\n                        <Badge variant=\"secondary\">{job.location}</Badge>\n                        <div className={{ display: 'flex', whiteSpace: 'pre-wrap' }}>\n                            <ReactMarkdown source={job.how_to_apply} />\n                        </div>\n                    </div>\n                    <img className=\"\" height=\"50\" src={job.company_logo} alt={job.company} />\n                </div>\n                <Card.Text>\n                    <Button variant=\"primary\" onClick={() => setOpen(s => !s)}>{open ? \"Hide Detials\" : \"View Details\"}</Button>\n                </Card.Text>\n                <Collapse in={open}>\n                    <div className=\"mt-4\">\n                        <ReactMarkdown source={job.description} />\n                    </div>\n                </Collapse>\n            </Card.Body>\n        </Card>\n\n    )\n}\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\n    const adjustPage = (amt) => {\n        return setPage(s => s + amt)\n    }\n\n    return (\n        <Pagination>\n            {page > 1 && <Pagination.Prev onClick={() => adjustPage(-1)}></Pagination.Prev>}\n            {page > 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\n            {page > 2 && <Pagination.Ellipsis></Pagination.Ellipsis>}\n            {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)} >{page - 1}</Pagination.Item>}\n            <Pagination.Item active> {page}</Pagination.Item>\n            {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}> {page + 1}</Pagination.Item>}\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)}></Pagination.Next>}\n        </Pagination>\n    )\n}\n","import React from 'react'\nimport { Form, Col } from 'react-bootstrap'\n\nexport default function SearchForm({ params, onParamChange }) {\n    return (\n        <Form className=\"mb-4\">\n            <Form.Row className=\"align-items-end\">\n                <Form.Group as={Col}>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\" />\n                </Form.Group>\n                <Form.Group as={Col}>\n                    <Form.Label>Location</Form.Label>\n                    <Form.Control onChange={onParamChange} value={params.location} name=\"location\" type=\"text\" />\n                </Form.Group>\n                <Form.Group as={Col} xs=\"auto\" className=\"ml-2\" >\n                    <Form.Check onChange={onParamChange} value={params.full_time} name=\"full_time\" id='full_time' label='Only full time' type='checkbox' className=\"mb-2\" />\n                </Form.Group>\n            </Form.Row>\n        </Form>\n    )\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport useFetchJobs from './Hooks/useFetchJobs';\nimport { Container } from 'react-bootstrap'\nimport Job from './Components/Job'\nimport JobsPagination from './Components/JobsPagination';\nimport SearchForm from './Components/SearchForm';\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n  const handleParamChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setPage(1);\n    setParams(s => ({ ...s, [name]: value }))\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-5\">GitHub Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Try refreshing </h1>}\n      {jobs.map((job, index) => (\n        <Job key={job.id} job={job} />\n      ))}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}